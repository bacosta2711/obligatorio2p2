/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package interfaces;

import domain.SystemClass;
import domain.Topic;
import java.awt.Component;
import java.util.Observable;
import java.util.Observer;
import javax.swing.DefaultListModel;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author bacosta
 */
public class QuerryTopic extends javax.swing.JFrame implements Observer{

    /**
     * Creates new form TopicQuerry
     */
    DefaultListModel model = new DefaultListModel();
    private SystemClass system;
    
    public QuerryTopic(SystemClass sys) {
        system = sys;
        system.addObserver(this);
        initComponents();
        lista.setModel(model);
        setTopicList();
        updateInfo();
    }

    
    public void update(Observable o,Object ob){
        
       setTopicList();
       updateInfo();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        back = new javax.swing.JToggleButton();
        topicPostulant = new javax.swing.JLabel();
        labelPostulant = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lista = new javax.swing.JList<>();
        countPosition = new javax.swing.JLabel();
        countPostulant = new javax.swing.JLabel();
        warning = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);
        getContentPane().setLayout(null);

        jPanel1.setBounds(new java.awt.Rectangle(0, 0, 480, 320));
        jPanel1.setPreferredSize(new java.awt.Dimension(480, 320));
        jPanel1.setRequestFocusEnabled(false);
        jPanel1.setLayout(null);

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 1, 12)); // NOI18N
        jLabel1.setText("Estadistias");
        jPanel1.add(jLabel1);
        jLabel1.setBounds(280, 50, 90, 40);

        jLabel2.setFont(new java.awt.Font("Helvetica Neue", 1, 14)); // NOI18N
        jLabel2.setText("Consulta por tema");
        jPanel1.add(jLabel2);
        jLabel2.setBounds(180, 0, 150, 40);

        back.setText("Cancelar");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back);
        back.setBounds(280, 270, 81, 23);

        topicPostulant.setText("Puestos que requieren este tematica:");
        jPanel1.add(topicPostulant);
        topicPostulant.setBounds(170, 170, 240, 17);

        labelPostulant.setText("Postulantes que superan valor 5:");
        jPanel1.add(labelPostulant);
        labelPostulant.setBounds(170, 140, 220, 17);

        lista.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        lista.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                listaPropertyChange(evt);
            }
        });
        lista.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                listaValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lista);

        jPanel1.add(jScrollPane1);
        jScrollPane1.setBounds(20, 50, 130, 240);

        countPosition.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        countPosition.setForeground(new java.awt.Color(255, 0, 0));
        countPosition.setText("0");
        jPanel1.add(countPosition);
        countPosition.setBounds(420, 170, 50, 17);

        countPostulant.setFont(new java.awt.Font("Helvetica Neue", 1, 13)); // NOI18N
        countPostulant.setForeground(new java.awt.Color(255, 0, 0));
        countPostulant.setText("0");
        jPanel1.add(countPostulant);
        countPostulant.setBounds(390, 140, 70, 17);

        warning.setFont(new java.awt.Font("Helvetica Neue", 0, 12)); // NOI18N
        warning.setForeground(new java.awt.Color(255, 0, 0));
        warning.setText("No hay tema seleccionado para generar estadisticas");
        jPanel1.add(warning);
        warning.setBounds(180, 80, 350, 17);

        getContentPane().add(jPanel1);
        jPanel1.setBounds(0, 0, 480, 320);

        setSize(new java.awt.Dimension(477, 340));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        // TODO add your handling code here:
        JFrame ventanaActual = (JFrame) SwingUtilities.getWindowAncestor((Component) evt.getSource());
        ventanaActual.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void listaPropertyChange(java.beans.PropertyChangeEvent evt) {//GEN-FIRST:event_listaPropertyChange
        // TODO add your handling code here:
       
    }//GEN-LAST:event_listaPropertyChange

    private void listaValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_listaValueChanged
        // TODO add your handling code here:
          updateInfo();
    }//GEN-LAST:event_listaValueChanged
    
    /**
     * @param args the command line arguments
     */
   
    
    private void setTopicList(){
    
        model.clear();
    for (Topic t : this.system.getTopics()) {
            model.addElement(t);
            
    }
    if(model.isEmpty()){
        
        lista.setEnabled(false);
        model.addElement("No hay temas.");
    }else{
        lista.setEnabled(true);
    }
    
    
    
    }
    private void updateInfo(){
        if (!lista.isSelectionEmpty()){
        System.out.println("Ejecuto recargaa");
        countPostulant.setText(this.system.getPostulantRiseSkill( lista.getSelectedValue())+"");
        countPosition.setText(this.system.getPositionWithSkill(lista.getSelectedValue())+"");
        
        labelPostulant.setVisible(true);
            topicPostulant.setVisible(true);
            countPosition.setVisible(true);
            countPostulant.setVisible(true);
            warning.setVisible(false);
        
        
        }else{
            labelPostulant.setVisible(false);
            topicPostulant.setVisible(false);
            countPosition.setVisible(false);
            countPostulant.setVisible(false);
            warning.setVisible(true);
            
        }
    }
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JToggleButton back;
    private javax.swing.JLabel countPosition;
    private javax.swing.JLabel countPostulant;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelPostulant;
    private javax.swing.JList<Topic> lista;
    private javax.swing.JLabel topicPostulant;
    private javax.swing.JLabel warning;
    // End of variables declaration//GEN-END:variables
}
