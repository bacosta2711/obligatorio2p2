package interfaces;

import domain.Interview;
import domain.Postulant;
import domain.SystemClass;
import domain.Topic;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.DefaultListModel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

public class QueryPostulantHistory extends javax.swing.JFrame {

    private SystemClass system;
    DefaultListModel model = new DefaultListModel();
    DefaultListModel modelTwo = new DefaultListModel();
    DefaultTableModel modelThree = new DefaultTableModel();

    public QueryPostulantHistory(SystemClass sys) {
        system = sys;
        initComponents();
        postulants.setModel(model);

        String[] titles = new String[]{"Nro", "Evaluador", "Puntaje", "Comentarios"};

        //modelThree.addRow(new Object [] {"1","2","3","4"}); 
        modelThree.setColumnIdentifiers(titles);
        filterInterviews.setModel(modelThree);

        setPostulants();
        modelThree.setRowCount(0);
        postulantAdress.setText("");
        formatPostulant.setText("");
        postulantLinkedin.setText("");
        postulantMail.setText("");
        postulantName.setText("");
        postulantDocument.setText("");
        postulantPhone.setText("");
        filterInterviews.setModel((TableModel) modelThree);
        postulantLinkedin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                postulantLinkedinMouseClicked(evt);
            }
        });

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        name = new javax.swing.JLabel();
        phone = new javax.swing.JLabel();
        mail = new javax.swing.JLabel();
        linkedin = new javax.swing.JLabel();
        document = new javax.swing.JLabel();
        adress = new javax.swing.JLabel();
        experience = new javax.swing.JLabel();
        format = new javax.swing.JLabel();
        postulantName = new javax.swing.JLabel();
        postulantDocument = new javax.swing.JLabel();
        postulantAdress = new javax.swing.JLabel();
        formatPostulant = new javax.swing.JLabel();
        postulantMail = new javax.swing.JLabel();
        postulantLinkedin = new javax.swing.JLabel();
        postulantPhone = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel18 = new javax.swing.JLabel();
        seeker = new javax.swing.JTextField();
        seekerButton = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        filterInterviews = new javax.swing.JTable();
        jScrollPane4 = new javax.swing.JScrollPane();
        postulants = new javax.swing.JList<>();
        jScrollPane2 = new javax.swing.JScrollPane();
        postulantExperience = new javax.swing.JList<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Entrevistas");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setText("Historial postulante");

        name.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        name.setText("Nombre:");
        name.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        phone.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        phone.setText("Teléfono:");
        phone.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        mail.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        mail.setText("Mail:");
        mail.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        linkedin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        linkedin.setText("LinkedIn:");
        linkedin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        document.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        document.setText("Cédula:");
        document.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        adress.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        adress.setText("Dirección:");
        adress.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        experience.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        experience.setText("Experiencia:");
        experience.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        format.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        format.setText("Formato:");
        format.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        postulantName.setText("Nombre Postulante");
        postulantName.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        postulantDocument.setText("CédulaPostulante");
        postulantDocument.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        postulantAdress.setText("CédulaPostulante");
        postulantAdress.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        formatPostulant.setText("CédulaPostulante");
        formatPostulant.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        postulantMail.setText("CédulaPostulante");
        postulantMail.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        postulantLinkedin.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        postulantLinkedin.setForeground(new java.awt.Color(0, 0, 255));
        postulantLinkedin.setText("CédulaPostulante");
        postulantLinkedin.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        postulantLinkedin.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        postulantLinkedin.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                postulantLinkedinMouseClicked(evt);
            }
        });

        postulantPhone.setText("CédulaPostulante");
        postulantPhone.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("Postulantes:");
        jLabel17.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        jButton1.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton1.setText("Atrás");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel18.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel18.setText("Buscar:");
        jLabel18.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        seeker.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seekerActionPerformed(evt);
            }
        });

        seekerButton.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        seekerButton.setText("Buscar");
        seekerButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        seekerButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seekerButtonActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jButton3.setText("Resetear");
        jButton3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        filterInterviews.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Nro", "Evaluador", "Puntaje", "Comentarios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        filterInterviews.setToolTipText("");
        filterInterviews.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        filterInterviews.setRowSelectionAllowed(false);
        jScrollPane3.setViewportView(filterInterviews);

        postulants.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        postulants.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        postulants.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                postulantsValueChanged(evt);
            }
        });
        jScrollPane4.setViewportView(postulants);

        jScrollPane2.setViewportView(postulantExperience);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 349, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(seeker, javax.swing.GroupLayout.PREFERRED_SIZE, 210, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(seekerButton, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(adress)
                            .addComponent(phone)
                            .addComponent(document)
                            .addComponent(name)
                            .addComponent(mail)
                            .addComponent(linkedin)
                            .addComponent(format)
                            .addComponent(experience))
                        .addGap(43, 43, 43)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(postulantDocument)
                    .addComponent(postulantName)
                    .addComponent(postulantAdress)
                    .addComponent(postulantPhone)
                    .addComponent(postulantMail)
                    .addComponent(postulantLinkedin)
                    .addComponent(formatPostulant)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(135, 135, 135))
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 969, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(50, 50, 50)
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(seeker, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(seekerButton)
                                .addComponent(jButton3))))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(14, 14, 14)
                        .addComponent(jLabel1)
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(name)
                            .addComponent(postulantName))
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(document, javax.swing.GroupLayout.PREFERRED_SIZE, 16, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(postulantDocument))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(adress)
                            .addComponent(postulantAdress))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(phone)
                            .addComponent(postulantPhone))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(mail)
                            .addComponent(postulantMail))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(linkedin)
                            .addComponent(postulantLinkedin))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(format)
                            .addComponent(formatPostulant))
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(experience)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))))
                .addGap(23, 23, 23)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 243, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 62, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(32, 32, 32))
        );

        setSize(new java.awt.Dimension(1035, 847));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void postulantsValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_postulantsValueChanged
        // TODO add your handling code here:
        Postulant selected = postulants.getSelectedValue();
        setPostulantAdress(selected);
        setPostulantDocument(selected);
        setPostulantExperience(selected);
        setPostulantName(selected);
        setPostulantLinkedin(selected);
        setPostulantPhone(selected);
        setPostulantMail(selected);
        setFormatPostulant(selected);
        generateTable();
    }//GEN-LAST:event_postulantsValueChanged

    private void postulantLinkedinMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_postulantLinkedinMouseClicked
        // TODO add your handling code here:
        Postulant selectedPostulant = postulants.getSelectedValue();
        if (selectedPostulant != null) {
            String linkedinURL = selectedPostulant.getLinkedin();

            if (linkedinURL != null && !linkedinURL.isEmpty()) {
                try {
                    java.awt.Desktop.getDesktop().browse(new java.net.URI(linkedinURL));
                } catch (java.io.IOException | java.net.URISyntaxException e) {
                    e.printStackTrace();
                }
            }
        }

    }//GEN-LAST:event_postulantLinkedinMouseClicked

    private void seekerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seekerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seekerActionPerformed

    private void seekerButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seekerButtonActionPerformed
        // TODO add your handling code here:
        String seek = getSeeker();
        ArrayList<Interview> l = this.system.getInterviews();
        ArrayList<Interview> r = new ArrayList();
        for (Interview s : l) {
            if (s.getObservation().toUpperCase().contains(seek) && !"".equals(seek) && !" ".equals(seek)) {
                r.add(s);
            }
        }
        System.out.println(r.size());
        setInterviews(r);
        highlightMatchesInTable(filterInterviews, seek);
    }//GEN-LAST:event_seekerButtonActionPerformed
    private void highlightMatchesInTable(JTable table, String searchString) {
        DefaultTableModel tableModel = (DefaultTableModel) table.getModel();

        for (int row = 0; row < tableModel.getRowCount(); row++) {
            String cellText = (String) tableModel.getValueAt(row, 3);
            if (cellText != null && cellText.toLowerCase().contains(searchString.toLowerCase())) {
                String cellTextLowerCase = cellText.toLowerCase();
                searchString = searchString.toLowerCase();
                String highlightedText = cellText;
                int startIndex = 0;

                while (startIndex < cellTextLowerCase.length()) {
                    int foundIndex = cellTextLowerCase.indexOf(searchString, startIndex);
                    if (foundIndex == -1) {
                        break;
                    }
                    highlightedText = highlightedText.substring(0, foundIndex)
                            + "<span style='color:red;'>" + cellText.substring(foundIndex, foundIndex + searchString.length()) + "</span>"
                            + highlightedText.substring(foundIndex + searchString.length());

                    startIndex = foundIndex + searchString.length();
                }
                tableModel.setValueAt("<html>" + highlightedText + "</html>", row, 3); // Columna 3 es el campo de "observation"
            }
        }

        table.setModel(tableModel);
    }


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        ArrayList<Interview> r = new ArrayList();
        setInterviews(r);
        seeker.setText("");
    }//GEN-LAST:event_jButton3ActionPerformed
    public void setInterviews(ArrayList<Interview> interviews) {
        modelThree.setRowCount(0);
        ArrayList<Interview> interviewList = interviews;
        for (Interview t : interviewList) {
            int number = t.getId();
            String interviewer = t.getInterviewer().toString();
            int puntuation = t.getPuntuation();
            String comments = t.getObservation();
            modelThree.addRow(new Object[]{number, interviewer, puntuation, comments});
        }
        System.out.println(filterInterviews.toString());
    }

    public void setPostulantAdress(Postulant postulant) {
        postulantAdress.setText(postulant.getAddress());
    }

    public void setPostulantDocument(Postulant postulant) {
        postulantDocument.setText(postulant.getDocument());
    }

    public void setFormatPostulant(Postulant postulant) {
        if (postulant.getJobModality() == 'R') {
            formatPostulant.setText("Remoto");
        } else {
            if (postulant.getJobModality() == 'H') {
                formatPostulant.setText("Híbrido");
            } else {
                formatPostulant.setText("Presencial");
            }

        }
    }

    public void setPostulantExperience(Postulant postulant) {
        modelTwo.clear();
        for (Map.Entry<Topic, Integer> entry : postulant.getSkills().entrySet()) {
            modelTwo.addElement(entry.getKey() + "(" + entry.getValue() + ")");
        }
        postulantExperience.setModel(modelTwo);
    }

    public void setPostulantLinkedin(Postulant postulant) {
        postulantLinkedin.setText("<html><u>"+postulant.getLinkedin()+"</u></html>");
    }

    public void setPostulantMail(Postulant postulant) {
        postulantMail.setText(postulant.getEmail());
    }

    public void setPostulantName(Postulant postulant) {
        postulantName.setText(postulant.getName());
    }

    public void setPostulantPhone(Postulant postulant) {
        postulantPhone.setText(postulant.getContact());
    }

    public String getSeeker() {
        return seeker.getText().toUpperCase();
    }

    /**
     * @param args the command line arguments
     */
    /**
     * @param args the command line arguments
     */
    public void setPostulants() {
        model.clear();
        ArrayList<Postulant> postulantList = this.system.getPostulants();
        for (Postulant T : postulantList) {
            model.addElement(T);
        }
    }

    public void generateTable() {
        if (!postulants.isSelectionEmpty()) {
            modelThree.setRowCount(0);
            for (Interview t : postulants.getSelectedValue().getInterviews()) {
                modelThree.addRow(new Object[]{t.getId(), t.getInterviewer().toString(), t.getPuntuation(), t.getObservation()});
            }
        }

        System.out.println(modelThree.toString());
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel adress;
    private javax.swing.JLabel document;
    private javax.swing.JLabel experience;
    private javax.swing.JTable filterInterviews;
    private javax.swing.JLabel format;
    private javax.swing.JLabel formatPostulant;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JLabel linkedin;
    private javax.swing.JLabel mail;
    private javax.swing.JLabel name;
    private javax.swing.JLabel phone;
    private javax.swing.JLabel postulantAdress;
    private javax.swing.JLabel postulantDocument;
    private javax.swing.JList<String> postulantExperience;
    private javax.swing.JLabel postulantLinkedin;
    private javax.swing.JLabel postulantMail;
    private javax.swing.JLabel postulantName;
    private javax.swing.JLabel postulantPhone;
    private javax.swing.JList<Postulant> postulants;
    private javax.swing.JTextField seeker;
    private javax.swing.JButton seekerButton;
    // End of variables declaration//GEN-END:variables
}
